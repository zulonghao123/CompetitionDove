<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yingchuang.dao.Members.MembersMapper">

    <resultMap id="membersMap" type="Members">
        <id property="id" column="id"></id>
        <result property="userName" column="userName"></result>
        <result property="password" column="password"></result>
        <result property="nickName" column="nickName"></result>
        <result property="memberCode" column="memberCode"></result>
        <association property="information" javaType="Information" resultMap="InformationMap"></association>
    </resultMap>

    <resultMap id="InformationMap" type="Information">
        <id property="id" column="i_id"></id>
        <result property="playerName" column="playerName"></result>
        <result property="sex" column="sex"></result>
        <result property="phoneNumber" column="phoneNumber"></result>
        <result property="Email" column="Email"></result>
        <result property="sick" column="sick"></result>
        <result property="dangerName" column="dangerName"></result>
        <result property="dangerPhone" column="dangerPhone"></result>
        <result property="createDate" column="createDate"></result>
        <result property="payStatus" column="payStatus"></result>
    </resultMap>

    <!--添加一条-->
    <insert id="addMembers" parameterType="Members"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO members VALUE(NULL,#{userName},#{password},#{nickName},#{information.id},#{memberCode})
    </insert>

    <!--修改一条会员信息，members和information表要一起修改-->
    <update id="updateMembersById" parameterType="Members">
        UPDATE members m, information i SET userName=#{userName},PASSWORD=#{password},nickName=#{nickName},
        playerName=#{information.playerName},sex=#{information.sex},
        phoneNumber=#{information.phoneNumber},Email=#{information.email},
        sick=#{information.sick},dangerName=#{information.dangerName},
        dangerPhone=#{information.dangerPhone},createDATE=NOW()
        WHERE m.informationId=i.id AND m.id=#{id}
    </update>

    <!--查询一条 ,在修改的时候要查询出一条记录显示在页面上，-->
    <select id="queryMembersById" parameterType="integer" resultMap="membersMap">
        SELECT m.userName,m.password,m.nickName,m.memberCode,
        i.id i_id ,i.playerName,i.sex,i.phoneNumber,i.email,i.idNumber,i.sick,
        i.dangerName,i.dangerPhone,i.createDATE,i.payStatus
        FROM members m ,information i WHERE m.informationId=i.id AND m.id=#{id}
    </select>

    <!--查询多条-->
    <select id="queryAllMembers" resultMap="membersMap">
        SELECT m.id,m.userName,m.password,m.nickName,m.memberCode,i.id i_id,
        i.playerName,i.sex,i.phoneNumber,i.email,i.idNumber,i.sick,i.dangerName,i.dangerPhone,i.createDATE,i.payStatus
        FROM members m ,information i WHERE m.informationId=i.id ORDER BY createDATE DESC
    </select>

    <!--模糊查询-->
    <select id="queryFuzzy" resultMap="membersMap" parameterType="string">
        SELECT DISTINCT m.id,m.userName,m.password,m.nickName,m.memberCode,i.playerName,i.sex,i.phoneNumber,
            i.Email,i.idNumber,i.sick,i.dangerName,i.dangerPhone,i.createDATE,i.payStatus
        FROM members m ,information i
        WHERE m.informationid=i.id
        AND ( m.id LIKE CONCAT('%',#{string},'%')
        OR m.userName LIKE CONCAT('%',#{string},'%')
        OR m.password LIKE CONCAT('%',#{string},'%')
        OR m.nickName LIKE CONCAT('%',#{string},'%')
        OR i.playerName LIKE CONCAT('%',#{string},'%')
        OR i.sex LIKE CONCAT('%',#{string},'%')
        OR i.phoneNumber LIKE CONCAT('%',#{string},'%')
        OR i.Email LIKE CONCAT('%',#{string},'%')
        OR i.idNumber LIKE CONCAT('%',#{string},'%')
        OR i.sick LIKE CONCAT('%',#{string},'%')
        OR i.dangerName LIKE CONCAT('%',#{string},'%')
        OR i.dangerPhone LIKE CONCAT('%',#{string},'%')
        OR i.createDATE LIKE BINARY CONCAT('%',#{string},'%')
        or m.memberCode like concat('%',#{string},'%'))
    </select>

    <select id="login" parameterType="Members" resultMap="membersMap">
        SELECT m.*,i.id i_id FROM  `members` m ,`information` i
        WHERE m.informationId=i.id
        AND userName=#{userName}
        AND PASSWORD=#{password}
    </select>



    <!--修改一条会员信息，members和information表要一起修改-->
    <update id="updateMembers" parameterType="Members">
       UPDATE members SET userName=#{userName},password=#{password},nickName=#{nickName},memberCode=#{memberCode} where id=#{id}
    </update>



</mapper>